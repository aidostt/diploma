services:
  - type: web
    name: api-gateway
    env: docker
    plan: free
    dockerfilePath: ./main-api-gateway/Dockerfile
    buildContextPath: ./main-api-gateway
    envVars:
      - file: ./main-api-gateway/.env
    ports:
      - 8000:8000

  - type: web
    name: authentication-service
    env: docker
    plan: free
    dockerfilePath: ./authentication-service/Dockerfile
    buildContextPath: ./authentication-service
    envVars:
      - file: ./authentication-service/.env

  - type: web
    name: notification-service
    env: docker
    plan: free
    dockerfilePath: ./notification-service/Dockerfile
    buildContextPath: ./notification-service
    envVars:
      - file: ./notification-service/.env

  - type: web
    name: qrcode-service
    env: docker
    plan: free
    dockerfilePath: ./qrcode-service/Dockerfile
    buildContextPath: ./qrcode-service
    envVars:
      - file: ./qrcode-service/.env

  - type: web
    name: reservation-service
    env: docker
    plan: free
    dockerfilePath: ./reservation-service/Dockerfile
    buildContextPath: ./reservation-service
    envVars:
      - file: ./reservation-service/.env

databases:
  - name: mongodb
    plan: free
    properties:
      image: mongo:latest
      volumes:
        - path: /data/db
          size: 1GB

  - name: postgres
    plan: free
    properties:
      image: postgres:latest
      envVars:
        - key: POSTGRES_USER
          value: ${DB_USER}
        - key: POSTGRES_PASSWORD
          value: ${DB_PASSWORD}
        - key: POSTGRES_DB
          value: ${DB_NAME}
      volumes:
        - path: /var/lib/postgresql/data
          size: 1GB
